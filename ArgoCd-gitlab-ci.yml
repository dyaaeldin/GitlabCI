stages:
  - buildProdImage
  - buildDevImage
  - buildStageImage
  - deployProd
  - deployDev
  - deployStage
   
build_prod_image:
  stage: buildProdImage
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
  script:
    - docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest-prod .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest-prod
  when: manual
  environment:
    name: prod

# Build Dev Image
build_dev_image:
  stage: buildDevImage
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
  script:
    - docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest-dev .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest-dev
  when: manual
  environment:
    name: prod

build_stage_image:
  stage: buildStageImage
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
  script:
    - docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest-stage .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest-stage
  when: manual
  environment:
    name: prod


 
deploy_production:
  stage: deployProd
  image: 
    name: bitnami/git:2.30.1
    entrypoint: [""]
  before_script: 
    - git clone https://${GIT_USER}:${GIT_PASS}@gitlab.com/repo/argoyaml.git
  script:
    - cd argoyaml && OLD_IMAGE_TAG=$(grep -i "${CI_REGISTRY}/${CI_PROJECT_PATH}"  prod/deployment.yml | cut -d ":" -f3) 
    - sed 's/${OLD_IMAGE_TAG}/${$CI_COMMIT_SHORT_SHA}/g' prod/deployment.yml 
    - git add . && git commit -m "updating prod deployment"
    - git push https://${GIT_USER}:${GIT_PASS}@gitlab.com/repo/argoyaml.git
  environment:
    name: "prod"  
  when: manual
    
deploy_staging:
  stage: deployStage
  image:
    name: bitnami/git:2.30.1
    entrypoint: [""]
  before_script:
    - git clone https://${GIT_USER}:${GIT_PASS}@gitlab.com/repo/argoyaml.git
  script:
    - cd argoyaml && OLD_IMAGE_TAG=$(grep -i "${CI_REGISTRY}/${CI_PROJECT_PATH}"  stage/deployment.yml | cut -d ":" -f3)
    - sed 's/${OLD_IMAGE_TAG}/${$CI_COMMIT_SHORT_SHA}/g' stage/deployment.yml
    - git add . && git commit -m "updating staging deployment"
    - git push https://${GIT_USER}:${GIT_PASS}@gitlab.com/repo/argoyaml.git
  environment:
    name: "prod"
  when: manual

deploy_development:
  stage: deployDev
  image:
    name: bitnami/git:2.30.1
    entrypoint: [""]
  before_script:
    - git clone https://${GIT_USER}:${GIT_PASS}@gitlab.com/repo/argoyaml.git
  script:
    - cd argoyaml && OLD_IMAGE_TAG=$(grep -i "${CI_REGISTRY}/${CI_PROJECT_PATH}" dev/deployment.yml | cut -d ":" -f3)
    - sed 's/${OLD_IMAGE_TAG}/${$CI_COMMIT_SHORT_SHA}/g' dev/deployment.yml
    - git add . && git commit -m "updating dev deployment" 
    - git push https://${GIT_USER}:${GIT_PASS}@gitlab.com/repo/argoyaml.git
  environment:
    name: "prod"
  only: 
    - push
